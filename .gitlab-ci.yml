variables:
  IMAGE_NAME: jinyhehe/spacestory
  IMAGE_TAG: $CI_COMMIT_SHA

stages:
  - compile
  - test
  - build
  - deploy

compile:
  stage: compile
  before_script: 
    - export PATH="/home/ubuntu/.sdkman/candidates/gradle/current/bin:$PATH"
  script:
    - gradle build --exclude-task test
  tags:
    - juny

test:
  stage: test
  before_script: 
    - export PATH="/home/ubuntu/.sdkman/candidates/gradle/current/bin:$PATH"
    - cat $SPRING_ENV > src/main/resources/env.yml
  script:
    - gradle build test
  tags:
    - juny-aws

build:
  stage: build
  image: docker:26.1.3
  services:
    - docker:26.1.3-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - cat $SPRING_ENV > src/main/resources/env.yml
    - echo $DOCKER_REGISTRY_PASS | docker login --username $DOCKER_REGISTRY_USER --password-stdin
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
    - docker push $IMAGE_NAME:$IMAGE_TAG
    - docker push $IMAGE_NAME:latest
  tags:
    - juny
  when: manual

deploy:
  stage: deploy
  before_script:
    - chmod 400 $SSH_KEY
    - mkdir -p ~/.ssh
    - ssh-keyscan -H 13.125.206.46 >> ~/.ssh/known_hosts
  script:
    - ssh -i $SSH_KEY ubuntu@13.125.206.46 "echo $DOCKER_REGISTRY_PASS | docker login --username $DOCKER_REGISTRY_USER --password-stdin && docker rm spring-app -f || true && docker pull $IMAGE_NAME:latest && docker run -d -p 8080:8080 --name spring-app --network juny $IMAGE_NAME:latest"
  tags:
    - juny
  when: manual
