variables:
  IMAGE_NAME: jinyhehe/spacestory
  IMAGE_TAG: "1.0"
  MY_ENV: $SPRING_ENV

stages:
  - test
  - build
  - deploy

test:
  stage: test
  before_script: 
    - echo $SPRING_ENV
    - cat $SPRING_ENV
    - echo $MY_ENV
    - cat $MY_ENV
    - export PATH="/home/ubuntu/.sdkman/candidates/gradle/current/bin:$PATH"
    - echo $ENV_YML > src/main/resources/env.yml
    - echo $ENV_YML > src/test/resources/env.yml
    - cat src/main/resources/env.yml
    - cat src/test/resources/env.yml
  script:
    - gradle build test
  tags:
    - test

build:
  stage: build
  image: docker:26.1.3
  services:
    - docker:26.1.3-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - echo $DOCKER_REGISTRY_PASS | docker login --username $DOCKER_REGISTRY_USER --password-stdin
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG
  tags:
    - build

deploy:
  stage: deploy
  before_script:
    - chmod 400 $SSH_KEY
    - mkdir -p ~/.ssh
    - ssh-keyscan -H 13.209.19.192 >> ~/.ssh/known_hosts
  script:
    - ssh -i $SSH_KEY ubuntu@13.209.19.192 "echo $DOCKER_REGISTRY_PASS | docker login --username $DOCKER_REGISTRY_USER --password-stdin \
       && docker rm app -f || true \ 
       && docker rmi $IMAGE_NAME:$IMAGE_TAG || true \
       && docker pull $IMAGE_NAME:$IMAGE_TAG \ 
       && docker run -d -p 8080:8080 --name app $IMAGE_NAME:$IMAGE_TAG"
  tags:
    - deploy
