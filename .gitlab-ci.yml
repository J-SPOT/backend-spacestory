variables:
  IMAGE_NAME: jinyhehe/spacestory
  IMAGE_TAG: $CI_COMMIT_SHA

stages:
  - compile
  - test
  - build
  - deploy

.compile_template: &compile_template
  stage: compile
  script:
    - gradle build --exclude-task test

compile_juny:
  <<: *compile_template
  before_script:
    - export PATH="/home/ubuntu/.sdkman/candidates/gradle/current/bin:$PATH"
  tags:
    - juny
  rules:
    - if: '$BUILD_MACHINE == "juny"'

compile_junylocal:
  <<: *compile_template
  tags:
    - juny-local
  rules:
    - if: '$BUILD_MACHINE == "juny-local"'

.test_template: &test_template
  stage: test
  script:
    - gradle build --exclude-task test

test_juny:
  <<: *test_template
  before_script:
    - export PATH="/home/ubuntu/.sdkman/candidates/gradle/current/bin:$PATH"
  tags:
    - juny
  rules:
    - if: '$BUILD_MACHINE == "juny"'

test_junylocal:
  <<: *test_template
  tags:
    - juny-local
  rules:
    - if: '$BUILD_MACHINE == "juny-local"'

.build_template: &build_template
  stage: build
  before_script:
    - cat $SPRING_ENV > src/main/resources/env.yml

build_juny:
  <<: *build_template
  image: docker:26.1.3
  services:
    - docker:26.1.3-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  script:
    - echo $DOCKER_REGISTRY_PASS | docker login --username $DOCKER_REGISTRY_USER --password-stdin
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
    - docker push $IMAGE_NAME:$IMAGE_TAG 
    - docker push $IMAGE_NAME:latest
  tags:
    - juny
  rules:
    - if: '$BUILD_MACHINE == "juny"'

build_junylocal:
  <<: *build_template
  script:
    - cat $DOCKER_FILE > Dockerfile
    - gradle build --exclude-task test
    - docker login
    - docker run --privileged --rm tonistiigi/binfmt --install all
    - docker buildx build --platform linux/amd64 -t $IMAGE_NAME:$IMAGE_TAG -t $IMAGE_NAME:latest --push .
  tags:
    - juny-local
  rules:
    - if: '$BUILD_MACHINE == "juny-local"'

.deploy_template: &deploy_template
  stage: deploy
  before_script:
    - chmod 400 $SSH_KEY
    - mkdir -p ~/.ssh
    - ssh-keyscan -H 13.125.206.46 >> ~/.ssh/known_hosts
  script:
    - ssh -i $SSH_KEY ubuntu@13.125.206.46 "echo $DOCKER_REGISTRY_PASS | docker login --username $DOCKER_REGISTRY_USER --password-stdin && docker rm spring-app -f || true && docker pull $IMAGE_NAME:latest && docker run -d -p 8080:8080 --name spring-app --network juny $IMAGE_NAME:latest"

deploy_juny:
  <<: *deploy_template
  tags:
    - juny
  rules:
    - if: '$BUILD_MACHINE == "juny"'

deploy_junylocal:
  <<: *deploy_template
  tags:
    - juny-local
  rules:
    - if: '$BUILD_MACHINE == "juny-local"'
